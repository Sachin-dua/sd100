package com.itc;

import com.tcs.TCS;
import com.tcs.Test89;

public class InterfaceConcept {

	public static void main(String[] args) {
		

	}

}

//you cannot create an object of the interface 
interface Test89 //abstraction
{ 
	void m1(); //public abstract
	void m2();
}

//class Yum
//{
//	Test89 tt = new Test89();
//	
//}

class TCS implements Test89
{
	public static void main(String[] args) {
		TCS t = new TCS();  // Method-1
		t.m1();
		t.m2();
		
		Test89 tt = new TCS();  // Method-2
		tt.m1();
		tt.m2(); 
	}
	public void m1()  //we can't use just void because interface methods are public by default
	{
		System.out.println("M1 method");
	}
	
	public void m2 ()
	{
		System.out.println("M2 method");
	}
	
}

//----------------------------------------------------------------------------------------------------------------------//
abstract class TCS2 implements Test89
{
	public static void main(String[] args) {
		TCS t = new TCS();  // Method-1
		t.m1();
		t.m2();
		
		Test89 tt = new TCS();  // Method-2
		tt.m1();
		tt.m2(); 
	}

	/*
	 * // public void m1() //we can't use just void because interface methods are
	 * public by default // { // System.out.println("M1 method"); // }
	 */	
	public void m2 ()
	{
		System.out.println("M2 method");
	}
	
}

class TCS3 extends TCS2
{
	public void m1()
	{
	System.out.println("M1 method");
	}
	
	public static void main(String[] args) 
	{
		TCS3 tc = new TCS3();
		tc.m1();
		tc.m2();
			
	}
}
